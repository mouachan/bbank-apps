    # Maximum Java heap to be used during the native image generation
    quarkus.native.native-image-xmx=4g
    
    kogito.decisions.validation=DISABLED

    #force index of the model 
    quarkus.index-dependency.model.group-id=org.redhat.bbank
    quarkus.index-dependency.model.artifact-id=model
    
    kogito.persistence.type=mongodb
    quarkus.mongodb.connection-string = mongodb://kogitouser:r3dh4t2021!@red-replica-set-0.red-replica-set-svc.mongo.svc.cluster.local,red-replica-set-1.red-replica-set-svc.mongo.svc.cluster.local,red-replica-set-2.red-replica-set-svc.mongo.svc.cluster.local
    quarkus.mongodb.database=kogito

    # OIDC server (keycloak) connection config
    #quarkus.http.cors=true
    #quarkus.oidc.auth-server-url=https://keycloak-bbtest.apps.ocp4.ouachani.org/auth/realms/kogito
    #quarkus.oidc.client-id=loan
    #quarkus.oidc.credentials.secret=secret
    #quarkus.oidc.enabled=true
    #quarkus.http.auth.permission.authenticated.paths=/*                                 
    #quarkus.http.auth.permission.authenticated.policy=authenticated
    
    #kogito (data-index)
  #kogito (data-index)
    kogito.service.url=localhost:8580
    kogito.dataindex.http.url=locahost:8180
    kogito.dataindex.ws.url=ws://data-index:8080
    quarkus.http.cors=true    

    kogito.persistence.type=mongodb
    quarkus.mongodb.connection-string=mongodb://kogitouser:kogitouser@localhost:27017
    quarkus.mongodb.database=kogito
    kafka.bootstrap.servers=localhost:9092

    # kafka loan service 
    

    mp.messaging.incoming.kogito_incoming_stream.bootstrap.servers=${kafka.bootstrap.servers}
    mp.messaging.outgoing.kogito_outgoing_stream.bootstrap.servers=${kafka.bootstrap.servers}

    mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka
    mp.messaging.outgoing.kogito_outgoing_stream.topic=loanapplication
    mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer

    mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka
    mp.messaging.incoming.kogito_incoming_stream.topic=result
    mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

    
    # # kogito - kafka messaging
    # mp.messaging.outgoing.kogito-jobs-events.bootstrap.servers=${kafka.bootstrap.servers}
    # mp.messaging.outgoing.kogito-jobs-events.connector=smallrye-kafka
    # mp.messaging.outgoing.kogito-jobs-events.topic=kogito-jobs-events
    # mp.messaging.outgoing.kogito-jobs-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


    # mp.messaging.outgoing.kogito-processdomain-events.bootstrap.servers=${kafka.bootstrap.servers}
    # mp.messaging.outgoing.kogito-processdomain-events.connector=smallrye-kafka
    # mp.messaging.outgoing.kogito-processdomain-events.topic=kogito-processinstances-events
    # mp.messaging.outgoing.kogito-processdomain-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


    # mp.messaging.outgoing.kogito-usertaskdomain-events.bootstrap.servers=${kafka.bootstrap.servers} 
    # mp.messaging.outgoing.kogito-usertaskdomain-events.connector=smallrye-kafka
    # mp.messaging.outgoing.kogito-usertaskdomain-events.topic=kogito-usertaskinstances-events
    # mp.messaging.outgoing.kogito-usertaskdomain-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

    # mp.messaging.outgoing.kogito-processinstances-events.bootstrap.servers=${kafka.bootstrap.servers}
    # mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
    # mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
    # mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

    # mp.messaging.outgoing.kogito-usertaskinstances-events.bootstrap.servers=${kafka.bootstrap.servers}   
    # mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
    # mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
    # mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

    # mp.messaging.outgoing.kogito-variables-events.bootstrap.servers=${kafka.bootstrap.servers}    
    # mp.messaging.outgoing.kogito-variables-events.connector=smallrye-kafka
    # mp.messaging.outgoing.kogito-variables-events.topic=kogito-variables-events
    # mp.messaging.outgoing.kogito-variables-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

  