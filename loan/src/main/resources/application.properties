quarkus.http.port=8480

quarkus.swagger-ui.always-include=true
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST
quarkus.http.cors.headers=X-Custom
quarkus.http.cors.exposed-headers=Content-Disposition

#kogito.decisions.validation=DISABLED


# Maximum Java heap to be used during the native image generation
quarkus.native.native-image-xmx=4g
quarkus.index-dependency.model.group-id=org.redhat.bbank
quarkus.index-dependency.model.artifact-id=model

kogito.service.url=http://localhost:8480
kogito.dataindex.http.url=http://localhost:8180
kogito.dataindex.ws.url=ws://localhost:8180

infinispan.remote.sasl-mechanism=PLAIN
infinispan.remote.use-auth=true
quarkus.infinispan-client.sasl-mechanism=PLAIN
quarkus.infinispan-client.server-list=localhost:11222
quarkus.infinispan-client.auth-username=admin
quarkus.infinispan-client.auth-password=admin
quarkus.infinispan-client.use-auth=true
infinispan.remote.use-auth=true
#kogito.persistence.type=infinispan
#quarkus.infinispan-client.auth-realm=default
quarkus.log.console.level=DEBUG

kafka.bootstrap.servers=localhost:9092

 # kafka loan service 
mp.messaging.incoming.kogito_incoming_stream.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.outgoing.kogito_outgoing_stream.bootstrap.servers=${kafka.bootstrap.servers}

#mp.messaging.incoming.kogito_incoming_stream.waitForWriteCompletion=false
#mp.messaging.outgoing.kogito_outgoing_stream.waitForWriteCompletion=false

mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka
mp.messaging.outgoing.kogito_outgoing_stream.topic=loanapplication
mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka
mp.messaging.incoming.kogito_incoming_stream.topic=result
mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer