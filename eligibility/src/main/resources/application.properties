quarkus.http.port=8580

# swagger / http cors
quarkus.swagger-ui.always-include=true
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST
quarkus.http.cors.headers=X-Custom
quarkus.http.cors.exposed-headers=Content-Disposition
#quarkus.http.cors.access-control-max-age=24H

# drools validation
kogito.decisions.validation=DISABLED

# native build
quarkus.native.native-image-xmx=6g
# quarkus.index-dependency.model.group-id=org.redhat.bbank
# quarkus.index-dependency.model.artifact-id=model

# data-index
kogito.service.url=http://localhost:8580
kogito.dataindex.http.url=http://localhost:8180
kogito.dataindex.ws.url=ws://localhost:8180

# rest endpoint to check if company exist 
org.redhat.bbank.eligibility.rest.CompaniesRemoteService/mp-rest/url=http://companies-svc-companies-svc.apps.ocp4.ouachani.org
org.redhat.bbank.eligibility.rest.CompaniesRemoteService/mp-rest/scope=javax.enterprise.context.ApplicationScoped

# kogito persistence properties (infinispan)
#infinispan.remote.sasl-mechanism=PLAIN
#infinispan.remote.use-auth=true
#quarkus.infinispan-client.sasl-mechanism=PLAIN
quarkus.infinispan-client.server-list=localhost:11222
#quarkus.infinispan-client.auth-username=admin
#quarkus.infinispan-client.auth-password=admin
infinispan.client.hotrod.socket_timeout=5000 
infinispan.client.hotrod.connect_timeout=5000 
infinispan.client.hotrod.max_retries=5 
infinispan.client.hotrod.client_intelligence=BASIC
#quarkus.infinispan-client.sasl-mechanism=PLAIN
#quarkus.infinispan-client.use-auth=true
#infinispan.remote.use-auth=true
#kogito.persistence.type=infinispan
#quarkus.infinispan-client.auth-realm=default

# messaging properties
kafka.bootstrap.servers=localhost:9092

#mp.messaging.incoming.kogito_incoming_stream.bootstrap.servers=${kafka.bootstrap.servers}
#mp.messaging.outgoing.kogito_outgoing_stream.bootstrap.servers=${kafka.bootstrap.servers}
#kogito.messaging.as-cloudevents=true


mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka
mp.messaging.incoming.kogito_incoming_stream.topic=loanapplication
mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka
mp.messaging.outgoing.kogito_outgoing_stream.topic=result
mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer


mp.messaging.outgoing.kogito-processdomain-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processdomain-events.topic=kogito-processdomain-events
mp.messaging.outgoing.kogito-processdomain-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-usertaskdomain-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskdomain-events.topic=kogito-usertaskdomain-events
mp.messaging.outgoing.kogito-usertaskdomain-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-variables-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-variables-events.topic=kogito-variables-events
mp.messaging.outgoing.kogito-variables-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#kogito monitoring 
kogito.monitoring.rule.useDefault=false
kogito.monitoring.process.useDefault=false
kogito.monitoring.interceptor.useDefault=false

#console log  
quarkus.log.console.level=DEBUG

