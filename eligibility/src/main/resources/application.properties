quarkus.http.port=8580

quarkus.swagger-ui.always-include=true
#quarkus.http.cors=true
#quarkus.http.cors.origins=*
#quarkus.http.cors.methods=GET,PUT,POST
#quarkus.http.cors.headers=X-Custom
#quarkus.http.cors.exposed-headers=Content-Disposition
#quarkus.http.cors.access-control-max-age=24H

kogito.decisions.validation=DISABLED


# Maximum Java heap to be used during the native image generation
quarkus.native.native-image-xmx=4g
quarkus.index-dependency.model.group-id=org.redhat.bbank
quarkus.index-dependency.model.artifact-id=model


#rest client 
org.redhat.bbank.eligibility.rest.CompaniesRemoteService/mp-rest/url=http://localhost:8680
org.redhat.bbank.eligibility.rest.CompaniesRemoteService/mp-rest/scope=javax.enterprise.context.ApplicationScoped
# OIDC server (keycloak) connection config
#quarkus.oidc.auth-server-url=https://keycloak-bbankapps-mongo.apps.ocp4.ouachani.org/auth/realms/kogito
#quarkus.oidc.client-id=eligibility
#quarkus.oidc.credentials.secret=secret
# Endpoint security configuration
#quarkus.http.auth.permission.authenticated.paths=/*
#quarkus.http.auth.permission.authenticated.policy=authenticated

#kogito (data-index)
kogito.service.url=localhost:8580
kogito.dataindex.http.url=locahost:8180
kogito.dataindex.ws.url=ws://data-index:8080
quarkus.http.cors=true    

kogito.persistence.type=mongodb
quarkus.mongodb.connection-string=mongodb://kogitouser:kogitouser@localhost:27017
quarkus.mongodb.database=kogito
kafka.bootstrap.servers=localhost:9092


mp.messaging.incoming.kogito_incoming_stream.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.outgoing.kogito_outgoing_stream.bootstrap.servers=${kafka.bootstrap.servers}

mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka
mp.messaging.incoming.kogito_incoming_stream.topic=loanapplication
mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka
mp.messaging.outgoing.kogito_outgoing_stream.topic=result
mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer


 # kogito - kafka messaging
    mp.messaging.outgoing.kogito-jobs-events.bootstrap.servers=${kafka.bootstrap.servers}
    mp.messaging.outgoing.kogito-jobs-events.connector=smallrye-kafka
    mp.messaging.outgoing.kogito-jobs-events.topic=kogito-jobs-events
    mp.messaging.outgoing.kogito-jobs-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


    mp.messaging.outgoing.kogito-processdomain-events-eligibility.bootstrap.servers=${kafka.bootstrap.servers}
    mp.messaging.outgoing.kogito-processdomain-events-eligibility.connector=smallrye-kafka
    mp.messaging.outgoing.kogito-processdomain-events-eligibility.topic=kogito-processinstances-events
    mp.messaging.outgoing.kogito-processdomain-events-eligibility.value.serializer=org.apache.kafka.common.serialization.StringSerializer


    mp.messaging.outgoing.kogito-usertaskdomain-events.bootstrap.servers=${kafka.bootstrap.servers} 
    mp.messaging.outgoing.kogito-usertaskdomain-events.connector=smallrye-kafka
    mp.messaging.outgoing.kogito-usertaskdomain-events.topic=kogito-usertaskinstances-events
    mp.messaging.outgoing.kogito-usertaskdomain-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

    mp.messaging.outgoing.kogito-processinstances-events.bootstrap.servers=${kafka.bootstrap.servers}
    mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
    mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
    mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

    mp.messaging.outgoing.kogito-usertaskinstances-events.bootstrap.servers=${kafka.bootstrap.servers}   
    mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
    mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
    mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

    mp.messaging.outgoing.kogito-variables-events.bootstrap.servers=${kafka.bootstrap.servers}    
    mp.messaging.outgoing.kogito-variables-events.connector=smallrye-kafka
    mp.messaging.outgoing.kogito-variables-events.topic=kogito-variables-events
    mp.messaging.outgoing.kogito-variables-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer
