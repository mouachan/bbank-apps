apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: mongodb.mongodb.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.phase
    description: Current state of the MongoDB deployment
    name: Phase
    type: string
  - JSONPath: .status.version
    description: Version of MongoDB server
    name: Version
    type: string
  group: mongodb.com
  names:
    kind: MongoDB
    listKind: MongoDBList
    plural: mongodb
    shortNames:
    - mdb
    singular: mongodb
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MongoDB is the Schema for the mongodbs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MongoDBSpec defines the desired state of MongoDB
          properties:
            featureCompatibilityVersion:
              description: FeatureCompatibilityVersion configures the feature compatibility
                version that will be set for the deployment
              type: string
            members:
              description: Members is the number of members in the replica set
              type: integer
            replicaSetHorizons:
              description: Add this parameter and values if you need your database
                to be accessed outside of Kubernetes. This setting allows you to
                provide different DNS settings within the Kubernetes cluster and
                to the Kubernetes cluster. The Kubernetes Operator uses split horizon
                DNS for replica set members. This feature allows communication both
                within the Kubernetes cluster and from outside Kubernetes.
              items:
                properties: {}
                type: object
              type: array
            security:
              description: Security configures security features, such as TLS, and
                authentication settings for a deployment
              properties:
                authentication:
                  properties:
                    modes:
                      description: Modes is an array specifying which authentication
                        methods should be enabled
                      items:
                        enum:
                        - SCRAM
                        type: string
                      type: array
                  required:
                  - modes
                  type: object
                tls:
                  description: TLS configuration for both client-server and server-server
                    communication
                  properties:
                    caConfigMapRef:
                      description: CaConfigMap is a reference to a ConfigMap containing
                        the certificate for the CA which signed the server certificates
                        The certificate is expected to be available under the key
                        "ca.crt"
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    certificateKeySecretRef:
                      description: CertificateKeySecret is a reference to a Secret
                        containing a private key and certificate to use for TLS. The
                        key and cert are expected to be PEM encoded and available
                        at "tls.key" and "tls.crt". This is the same format used for
                        the standard "kubernetes.io/tls" Secret type, but no specific
                        type is required.
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    enabled:
                      type: boolean
                    optional:
                      description: Optional configures if TLS should be required or
                        optional for connections
                      type: boolean
                  required:
                  - enabled
                  type: object
              type: object
            statefulSet:
              description: StatefulSetConfiguration holds the optional custom StatefulSet
                that should be merged into the operator created one.
              type: object
            type:
              description: Type defines which type of MongoDB deployment the resource
                should create
              enum:
              - ReplicaSet
              type: string
            users:
              description: Users specifies the MongoDB users that should be configured
                in your deployment
              items:
                properties:
                  db:
                    description: DB is the database the user is stored in. Defaults
                      to "admin"
                    type: string
                  name:
                    description: Name is the username of the user
                    type: string
                  passwordSecretRef:
                    description: PasswordSecretRef is a reference to the secret containing
                      this user's password
                    properties:
                      key:
                        description: Key is the key in the secret storing this password.
                          Defaults to "password"
                        type: string
                      name:
                        description: Name is the name of the secret storing this user's
                          password
                        type: string
                    required:
                    - name
                    type: object
                  roles:
                    description: Roles is an array of roles assigned to this user
                    items:
                      description: Role is the database role this user should have
                      properties:
                        db:
                          description: DB is the database the role can act on
                          type: string
                        name:
                          description: Name is the name of the role
                          type: string
                      required:
                      - db
                      - name
                      type: object
                    type: array
                  scramCredentialsSecretName:
                    description: ScramCredentialsSecretName appended by string "scram-credentials" is the name of the secret object
                      created by the mongoDB operator for storing SCRAM credentials
                    type: string
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                required:
                - name
                - passwordSecretRef
                - roles
                - scramCredentialsSecretName
                type: object
              type: array
            version:
              description: Version defines which version of MongoDB will be used
              type: string
          required:
          - security
          - type
          - users
          - version
          type: object
        status:
          description: MongoDBStatus defines the observed state of MongoDB
          properties:
            currentStatefulSetReplicas:
              type: integer
            currentMongoDBMembers:
              type: integer
            message:
              type: string
            mongoUri:
              type: string
            phase:
              type: string
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true